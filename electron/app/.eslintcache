[{"/home/pi/JaguarXf_CAN/electron/app/src/index.js":"1","/home/pi/JaguarXf_CAN/electron/app/src/store.js":"2","/home/pi/JaguarXf_CAN/electron/app/src/App.js":"3","/home/pi/JaguarXf_CAN/electron/app/src/middleware/socketMiddleware.js":"4","/home/pi/JaguarXf_CAN/electron/app/src/helpers/componetWillMountHelper.js":"5","/home/pi/JaguarXf_CAN/electron/app/src/actions/types.js":"6","/home/pi/JaguarXf_CAN/electron/app/src/components/settings/Settings.js":"7","/home/pi/JaguarXf_CAN/electron/app/src/components/climate/climate.js":"8","/home/pi/JaguarXf_CAN/electron/app/src/components/vehicleInfo/VehicleInfo.js":"9","/home/pi/JaguarXf_CAN/electron/app/src/components/nav/Nav.js":"10","/home/pi/JaguarXf_CAN/electron/app/src/actions/index.js":"11","/home/pi/JaguarXf_CAN/electron/app/src/reducers/index.js":"12","/home/pi/JaguarXf_CAN/electron/app/src/utils.js":"13","/home/pi/JaguarXf_CAN/electron/app/src/components/climate/Temperature.js":"14","/home/pi/JaguarXf_CAN/electron/app/src/components/climate/CarOverview.js":"15","/home/pi/JaguarXf_CAN/electron/app/src/components/common/DataBox.js":"16","/home/pi/JaguarXf_CAN/electron/app/src/components/common/DataBoxSingleLine.js":"17","/home/pi/JaguarXf_CAN/electron/app/src/components/common/NavButton.js":"18","/home/pi/JaguarXf_CAN/electron/app/src/reducers/vehicleInfo.js":"19","/home/pi/JaguarXf_CAN/electron/app/src/reducers/engineDetails.js":"20","/home/pi/JaguarXf_CAN/electron/app/src/reducers/appDetails.js":"21","/home/pi/JaguarXf_CAN/electron/app/src/reducers/climate.js":"22","/home/pi/JaguarXf_CAN/electron/app/src/reducers/settings.js":"23","/home/pi/JaguarXf_CAN/electron/app/src/components/carplay/carplay.js":"24","/home/pi/JaguarXf_CAN/electron/app/src/components/carplay/carplayWindow.js":"25","/home/pi/JaguarXf_CAN/electron/app/src/components/carplay/JsmpegPlayer.js":"26"},{"size":440,"mtime":1628321022681,"results":"27","hashOfConfig":"28"},{"size":447,"mtime":1628321022681,"results":"29","hashOfConfig":"28"},{"size":3871,"mtime":1628328717000,"results":"30","hashOfConfig":"28"},{"size":3400,"mtime":1628321022681,"results":"31","hashOfConfig":"28"},{"size":106,"mtime":1628321022681,"results":"32","hashOfConfig":"28"},{"size":679,"mtime":1628321022681,"results":"33","hashOfConfig":"28"},{"size":1767,"mtime":1628321022681,"results":"34","hashOfConfig":"28"},{"size":2424,"mtime":1628321022681,"results":"35","hashOfConfig":"28"},{"size":1949,"mtime":1628321022681,"results":"36","hashOfConfig":"28"},{"size":1053,"mtime":1628326505000,"results":"37","hashOfConfig":"28"},{"size":559,"mtime":1628321022681,"results":"38","hashOfConfig":"28"},{"size":408,"mtime":1628321022681,"results":"39","hashOfConfig":"28"},{"size":385,"mtime":1628321022681,"results":"40","hashOfConfig":"28"},{"size":1478,"mtime":1628321022681,"results":"41","hashOfConfig":"28"},{"size":7022,"mtime":1628321022681,"results":"42","hashOfConfig":"28"},{"size":1771,"mtime":1628321022681,"results":"43","hashOfConfig":"28"},{"size":1335,"mtime":1628321022681,"results":"44","hashOfConfig":"28"},{"size":924,"mtime":1628322226000,"results":"45","hashOfConfig":"28"},{"size":203,"mtime":1628321022681,"results":"46","hashOfConfig":"28"},{"size":382,"mtime":1628321022681,"results":"47","hashOfConfig":"28"},{"size":501,"mtime":1628321022681,"results":"48","hashOfConfig":"28"},{"size":243,"mtime":1628321022681,"results":"49","hashOfConfig":"28"},{"size":250,"mtime":1628321022681,"results":"50","hashOfConfig":"28"},{"size":1000,"mtime":1628330024000,"results":"51","hashOfConfig":"28"},{"size":5311,"mtime":1628329063000,"results":"52","hashOfConfig":"28"},{"size":867,"mtime":1627828810000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"1umo2yx",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"57"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"/home/pi/JaguarXf_CAN/electron/app/src/index.js",["126","127"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'typeface-roboto'\nimport { Provider } from 'react-redux'\nimport store from \"./store\";\nimport socketMiddleware from \"./middleware/socketMiddleware\";\nimport { composeWithDevTools } from 'electron-redux-devtools';\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n",["128","129"],"/home/pi/JaguarXf_CAN/electron/app/src/store.js",[],"/home/pi/JaguarXf_CAN/electron/app/src/App.js",["130","131"],"import React from 'react';\r\nimport {HashRouter, Switch, Route, Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport Settings from \"./components/settings/Settings\";\r\nimport Climate from \"./components/climate/climate\";\r\nimport VehicleInfo from \"./components/vehicleInfo/VehicleInfo\";\r\nimport './App.css';\r\nimport Nav from \"./components/nav/Nav\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport {createMuiTheme, CssBaseline, ThemeProvider} from \"@material-ui/core\"\r\nimport {makeStyles, responsiveFontSizes} from \"@material-ui/core/styles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport {socketConnectT} from \"./actions\";\r\nimport {useComponentWillMount} from \"./helpers/componetWillMountHelper\";\r\nimport carplay from \"./components/carplay/carplay\";\r\n\r\n//const electron = window.require(\"electron\");\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1\r\n    },\r\n    nav: {\r\n        marginTop: 'auto'\r\n    }\r\n}));\r\n\r\nfunction App({socketConnectT, appDetails}) {\r\n\r\n    const classes = useStyles();\r\n    const prefersDarkMode =  appDetails.dark//useMediaQuery('(prefers-color-scheme: dark)')\r\n    console.log(appDetails)\r\n\r\n\r\n    let theme = React.useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    type: prefersDarkMode ? 'dark' : 'light',\r\n                    background : {\r\n                        default: prefersDarkMode ? '#121212' : '#eeeeee',\r\n                        paper: prefersDarkMode ? '#2e2e2e' : '#fafafa'\r\n                    },\r\n                    secondary: {\r\n                        main: '#3dedf4', dark: 'ff00ee'\r\n                    },\r\n                    MuiIcon: {\r\n                        root: {\r\n                            fontSize: '100px',\r\n                        },\r\n                    },\r\n                },\r\n                overrides: {\r\n                    MuiCssBaseline: {\r\n                        '@global': {\r\n                            '*': {\r\n                                'scrollbar-width': 'thin',\r\n                            },\r\n                            '*::-webkit-scrollbar': {\r\n                                width: '4px',\r\n                                height: '4px',\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }),\r\n                [prefersDarkMode]\r\n    )\r\n\r\n    theme = responsiveFontSizes(theme);\r\n\r\n    const connectSocket = () => {\r\n        socketConnectT(\"localhost:3000\")\r\n    }\r\n    useComponentWillMount(connectSocket)\r\n\r\n    return (\r\n        <ThemeProvider theme={theme} >\r\n            <CssBaseline />\r\n            <Box className={classes.root} >\r\n                <HashRouter>\r\n                    <Box style={{height: '100vh', overflow: 'scroll'}} className={`${classes.content}`}>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Climate}/>\r\n                            <Route exact path='/carplay' component={carplay} />\r\n                            <Route exact path=\"/climate\" component={Climate}/>\r\n                            <Route exact path=\"/vehicle\" component={VehicleInfo}/>\r\n                            <Route exact path=\"/settings\" component={Settings}/>\r\n                        </Switch>\r\n                    </Box>\r\n                    {appDetails.currentPage==='carplay' ? <div></div> : <Nav />}\r\n                </HashRouter>\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {appDetails: state.appDetails}\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    socketConnectT: socketConnectT\r\n})(App);\r\n","/home/pi/JaguarXf_CAN/electron/app/src/middleware/socketMiddleware.js",["132","133"],"import {socketConnectT} from \"../actions\";\nimport {\n    SOCKET_CONNECTED,\n    SOCKET_CONNECT,\n    SOCKET_ACTION,\n    SOCKET_ENGINE,\n    SOCKET_TRIP,\n    CURRENT_PAGE, LEAVE_PAGE, ROOM_JOINED, SOCKET_CLIMATE, MS_ACTION, SOCKET_SETTINGS, GENERAL\n} from \"../actions/types\";\nimport io from \"socket.io-client\";\n\nconst socketMiddleware = () => {\n    let socket= null;\n\n    // const onOpen = store => (event) => {\n    //     console.log(\"opening socket: \", event.target.url)\n    //     store.dispatch(socketConnectT(event.target.url))\n    // }\n\n    const onMessage = store => (data) => {\n        // const payload = JSON.parse(event.data);\n        //console.log('receiving server message', payload);\n    }\n\n    return store => next => action => {\n        switch (action.type) {\n            case SOCKET_CONNECT:\n                socket = io({transports: ['websocket'], upgrade: false}).connect('localhost:3000');\n\n                socket.on('connect', (data) => {\n                    //onOpen(store)\n                    console.log(\"connected!\")\n                    store.dispatch({type: SOCKET_CONNECTED, payload: true})\n                    socket.emit('join', {room: 'climate'})\n                    socket.emit('join', {room: 'general'})\n                })\n\n                socket.on('error', (data) => {\n                    console.log(\"socket error\", data)\n                })\n\n                socket.on('disconnect', (reason) => {\n\t\t    console.log(\"disconnected due to \", reason)\n                    store.dispatch({type: SOCKET_CONNECTED, payload:false})\n                })\n\n                socket.on('engine', (data) => {\n                    // onMessage(store)\n                    store.dispatch({type: SOCKET_ENGINE, payload:data})\n                })\n\n                socket.on('general', (data) => {\n                    store.dispatch({type: GENERAL, payload:data})\n                })\n\n                socket.on('trip', (data) => {\n                    store.dispatch({type: SOCKET_TRIP, payload:data})\n                })\n\n                socket.on('status', (data) => {\n                })\n\n                socket.on('settings', (data) => {\n                    store.dispatch({type: SOCKET_SETTINGS, payload:data})\n                })\n\n                socket.on('joining', (data) => {\n                    store.dispatch({type: ROOM_JOINED, payload: data.room})\n                })\n\n                socket.on('leaving', (data) => {\n                })\n\n                socket.on('climate', (data) => {\n                    store.dispatch({type: SOCKET_CLIMATE, payload: data})\n                })\n                break;\n            case CURRENT_PAGE:\n                socket.emit('join', {room: action.payload})\n                break;\n            case LEAVE_PAGE:\n                socket.emit('leave', {room: action.payload})\n                break;\n            case SOCKET_ACTION:\n                socket.emit(\"action\", {type: action.payload.actionName , func:action.payload.actionFunction});\n                break;\n            case MS_ACTION:\n                socket.emit('newAction', action.payload);\n                break;\n            // case SOCKET_ENGINE:\n            //     console.log(\"engine info\", action.payload);\n            // case SOCKET_TRIP:\n            //     console.log(\"trip info\", action.payload);\n            default:return next(action)\n        }\n    }\n}\n\nexport default socketMiddleware();\n","/home/pi/JaguarXf_CAN/electron/app/src/helpers/componetWillMountHelper.js",["134"],"import { useMemo } from 'react';\n\nexport const useComponentWillMount = (func) => {\n    useMemo(func, [])\n}","/home/pi/JaguarXf_CAN/electron/app/src/actions/types.js",[],"/home/pi/JaguarXf_CAN/electron/app/src/components/settings/Settings.js",["135","136"],"import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector} from \"react-redux\";\nimport {Switch, FormGroup, FormControlLabel, Box, Container, Divider} from '@material-ui/core';\nimport checkPage from \"../../utils\";\nimport {sendMsAction} from \"../../actions\";\n\nfunction Settings() {\n\n    const pageTitle = 'settings'\n    const details = useSelector(state => state.settings.bools);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        checkPage(pageTitle)\n        // if(pageTitle !== )\n    }, [])\n\n    const handleChange = (event) => {\n        dispatch(sendMsAction({bus:'ms', id: 680, type: event.target.name, value: event.target.checked}));\n    };\n\n    const renderSwitch = (item) => {\n        return(\n            <React.Fragment>\n                <FormControlLabel\n                      display={'flex'}\n                      key={item[0]}\n                        style={{justifyContent: 'space-between'}}\n                      labelPlacement={'start'}\n                      control={\n                          <Switch\n                              checked={details[item[0]]}\n                              onChange={handleChange}\n                              name={item[0]}\n                              color=\"primary\"\n                          />\n                      }\n                      label={item[0].replaceAll(\"_\", \" \")}\n                />\n                <Divider />\n            </React.Fragment>\n\n        )\n    }\n\n    return (\n        // <Box> maxHeight={350} overflow={'scroll'}\n        <Container>\n            <FormGroup column>\n                {details ? Object.entries(details).map(item => renderSwitch(item)) : <div>Loading</div>}\n            </FormGroup>\n        </Container>\n\n    );\n}\n\nexport default Settings;","/home/pi/JaguarXf_CAN/electron/app/src/components/climate/climate.js",["137","138"],"import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector} from \"react-redux\";\nimport Paper from '@material-ui/core/Paper';\nimport { sendAction} from \"../../actions\";\nimport Grid from '@material-ui/core/Grid';\nimport Temperature from \"./Temperature\";\nimport CarOverview from \"./CarOverview\";\nimport checkPage from \"../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nfunction Climate() {\n    const pageTitle = 'climate'\n    const details = useSelector(state => state.climate);\n    const driversTemp = details.driverTempText;\n    const passengerTemp = details.passTempText;\n    const defrost = details.defrost;\n    const rearHeater = details.rearHeater;\n    const interiorTemp = details.interiorTemp;\n    const auto = details.auto;\n    const frontHeater = details.frontHeater;\n    const recirc = details.recirc;\n\n    const dispatch = useDispatch()\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        checkPage(pageTitle)\n\n        // if(pageTitle !== )\n\n    }, [])\n\n    const action = (actionDetails) => {\n        dispatch(sendAction(actionDetails))\n    }\n\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container justify={'flex-start'} alignItems={'center'} spacing={3} direction={'row'} height={300} >\n                <Grid item xs={4}>\n                    <Temperature value={driversTemp} action={action} className={classes.paper} name={'driver'} />\n                </Grid>\n                <Grid item xs={4}>\n                    <CarOverview\n                        action={action}\n                        rearHeater={rearHeater}\n                        frontHeat={frontHeater}\n                        auto={auto}\n                        defrost={defrost}\n                        interiorTemp={interiorTemp}\n                        recirc={recirc}\n                        />\n                </Grid>\n                <Grid item xs={4} >\n                    <Temperature value={passengerTemp} className={classes.paper} action={action} name={'pass'}/>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Climate;","/home/pi/JaguarXf_CAN/electron/app/src/components/vehicleInfo/VehicleInfo.js",["139","140"],"import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector} from \"react-redux\";\nimport {Grid, Box} from \"@material-ui/core\";\nimport checkPage from \"../../utils\";\nimport DataBox from \"../common/DataBox\";\nimport DataBoxSingleLine from \"../common/DataBoxSingleLine\";\n\nfunction VehicleInfo() {\n\n    const pageTitle = 'vehicleInfo';\n    const details = useSelector(state => state.engineDetails.trip);\n\n\n    useEffect(() => {\n        checkPage(pageTitle)\n        // if(pageTitle !== )\n    }, [])\n\n        return (\n            <Box display={'flex'} size={100} justifyContent={'space-between'} flexDirection={'column'} flexGrow={1}>\n                <Grid container justify={'center'} alignItems={'center'} alignContent={'center'} spacing={3} >\n                    <Grid item xs={6}>\n                        <DataBox value={details.speed } title={'Speed'} units={'MPH'} min={0} max={140} limit={80}/>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <DataBox value={details.revs} title={'Engine Speed'} units={'RPM'} min={0} max={5000} limit={800}/>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <DataBox value={details.coolant} title={'Coolant Temp'} units={'°C'} min={0} max={120} limit={100}/>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <DataBox value={details.oil} title={'Oil Temp'} units={'°C'} min={'0'} max={120} limit={100}/>\n                    </Grid>\n                </Grid>\n                <Grid container justify={'space-between'}>\n                    <DataBoxSingleLine data={details.tripMpg} />\n                    <DataBoxSingleLine data={details.tripAvg} />\n                    <DataBoxSingleLine data={details.tripDistance}/>\n                    <DataBoxSingleLine data={details.tripRange}/>\n                </Grid>\n            </Box>\n\n        );\n}\n\nexport default VehicleInfo;","/home/pi/JaguarXf_CAN/electron/app/src/components/nav/Nav.js",["141","142"],"import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport {BottomNavigation, BottomNavigationAction} from \"@material-ui/core\";\r\nimport NavButton from '../common/NavButton'\r\n\r\nconst styles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        // position: 'fixed',\r\n        // bottom: 0,\r\n    }\r\n})\r\n\r\n\r\nclass Nav extends Component {\r\n    state = {\r\n        currentNav: 'climate'\r\n    };\r\n\r\n    navChange = (event, value) => {\r\n        // this.props.history.push('/' + value)\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <BottomNavigation value={this.state.currentNav} onChange={this.navChange} className={classes.root}>\r\n                <NavButton name={'carplay'}/>\r\n                <NavButton name={'climate'}/>\r\n                <NavButton name={'vehicle'}/>\r\n                <NavButton name={'settings'}/>\r\n            </BottomNavigation>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {})(Nav);","/home/pi/JaguarXf_CAN/electron/app/src/actions/index.js",[],"/home/pi/JaguarXf_CAN/electron/app/src/reducers/index.js",[],"/home/pi/JaguarXf_CAN/electron/app/src/utils.js",[],"/home/pi/JaguarXf_CAN/electron/app/src/components/climate/Temperature.js",["143"],"import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport {IconButton} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    largeIcon1: {\n        '& svg': {\n            fontSize: 100\n        }\n    }\n}))\n\nconst Temperature = ({value, action, name}) =>{\n\n    const classes = useStyles()\n\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignContent:'center', alignItems: 'center', verticalAlign: 'middle'}}>\n            <IconButton className={classes.largeIcon1}><KeyboardArrowUpIcon fontSize={'large'} onTouchStart={() => action({actionName: name + 'Up', actionFunction: 'pressed'})} onTouchEnd={() => action({actionName: name + 'Up', actionFunction: 'rel'})} style={{color: 'red'}}/></IconButton>\n            <Typography align={'center'} variant=\"h1\" component=\"h2\" gutterBottom>{value}°C</Typography>\n            <IconButton className={classes.largeIcon1}><KeyboardArrowDownIcon  onTouchStart={() => action({actionName: name + 'Down', actionFunction: 'pressed'})} onTouchEnd={() => action({actionName: name + 'Down', actionFunction: 'rel'})} style={{color: 'blue'}} /></IconButton>\n        </div>\n\n    )\n\n}\n\nexport default Temperature;","/home/pi/JaguarXf_CAN/electron/app/src/components/climate/CarOverview.js",["144","145","146","147"],"import React from 'react';\nimport car from '../../images/car.png'\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport {Box} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {SvgIcon, Typography} from \"@material-ui/core\";\nimport {ReactComponent as Rear} from '../../images/SVG/rearWindow.svg'\nimport {ReactComponent as Front} from '../../images/SVG/frontDefrost.svg'\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport {Autorenew, PowerSettingsNew} from \"@material-ui/icons\";\nimport Button from \"@material-ui/core/Button\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    image: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n        objectFit: 'cover',\n        height: '100%',\n        maxWidth: '100%'\n    },\n    imageContainer: {\n        height: 100\n    },\n    largeIcon: {\n        fontSize: 100\n    },\n    noWrap: {\n        flexWrap: 'nowrap'\n    }\n}));\n\nfunction CarOverview ({rearHeater,frontHeater,auto,defrost,interiorTemp,recirc, action}) {\n\n    const handleClick = (type) => {\n\n    }\n\n    const classes = useStyles();\n    return (\n        <Grid container justify={'center'} alignItems={'center'} spacing={3} direction={'column'}>\n\n            <Grid item grow={1} xs={12} className={classes.imageContainer} >\n                <Grid container justify={'center'} direction={'row'} spacing={1}>\n                    <Grid\n                        item\n                        xs={4}\n                        direction={'row'}\n                        onTouchStart={() => action({actionName: 'defrost', actionFunction: 'pressed'})}\n                        onTouchEnd={() => action({actionName: 'defrost', actionFunction: 'rel'})}\n                    >\n                        <Button size={'large'}  fullWidth={true}>\n                            <SvgIcon fontSize={'large'}>\n                                <Front/>\n                            </SvgIcon>\n                        </Button>\n                        <div style={defrost > 0? {height: '5px', backgroundColor: 'orange'} : {}}></div>\n                    </Grid>\n\n                    <Grid\n                        item\n                        xs={4}\n                        direction={'row'}\n                        onTouchStart={() => action({actionName: 'frontHeater', actionFunction: 'pressed'})}\n                        onTouchEnd={() => action({actionName: 'frontHeater', actionFunction: 'rel'})}\n                    >\n                        <Button size={'large'}  fullWidth={true}>\n                            <SvgIcon  fontSize={'large'}>\n                                <Front/>\n                            </SvgIcon>\n                        </Button>\n                        <div style={frontHeater > 0? {height: '5px', backgroundColor: 'orange'} : {}}></div>\n                    </Grid>\n                </Grid>\n\n                <Grid container display={'flex'} direction={'row'} >\n                    <Grid item xs={3}>\n                        <Box display={'flex'} flexDirection={'column'}>\n                            <Box\n                                onTouchStart={() => action({actionName: 'auto', actionFunction: 'pressed'})}\n                                onTouchEnd={() => action({actionName: 'auto', actionFunction: 'rel'})}\n                            >\n                                <Button size={'large'}  fullWidth={true}>\n                                    AUTO\n                                </Button>\n                                <div style={auto > 0? {height: '5px', backgroundColor: 'orange'} : {}}></div>\n                            </Box>\n                            <Box\n                                onTouchStart={() => action({actionName: 'rearHeater', actionFunction: 'pressed'})}\n                                onTouchEnd={() => action({actionName: 'rearHeater', actionFunction: 'rel'})}\n                            >\n                                <Button size={'large'}  fullWidth={true}>\n                                    <SvgIcon fontSize={'large'}>\n                                        <Rear/>\n                                    </SvgIcon>\n                                </Button>\n                                <div style={rearHeater > 0? {height: '5px', backgroundColor: 'orange'} : {}}></div>\n                            </Box>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Card className={classes.image}>\n                            <CardActionArea>\n                                <CardMedia\n                                    component=\"img\"\n                                    alt=\"Contemplative Reptile\"\n                                    image={car}\n                                />\n                            </CardActionArea>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Box display={'flex'} flexDirection={'column'}>\n                            <Box\n                                onTouchStart={() => action({actionName: 'recirc', actionFunction: 'pressed'})}\n                                onTouchEnd={() => action({actionName: 'recirc', actionFunction: 'rel'})}>\n                                <Button size={'large'}  fullWidth={true}>\n                                    <Autorenew fontSize={'large'}>\n                                        <Rear />\n                                    </Autorenew>\n                                </Button>\n                                <div style={recirc > 0? {height: '5px', backgroundColor: 'orange'} : {}}></div>\n                            </Box>\n                            <Box\n                                onTouchStart={() => action({actionName: 'fanOn', actionFunction: 'pressed'})}\n                                onTouchEnd={() => action({actionName: 'fanOn', actionFunction: 'rel'})}\n                            >\n                                <Button size={'large'}  fullWidth={true}>\n                                    <PowerSettingsNew fontSize={'large'}>\n                                        <Rear />\n                                    </PowerSettingsNew>\n                                </Button>\n                                <div style={auto > 0? {height: '5px', backgroundColor: 'orange'} : {}}></div>\n                            </Box>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography align={'center'} variant=\"caption\" component=\"p\" gutterBottom>Interior Temp<br />18°C</Typography>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default CarOverview;","/home/pi/JaguarXf_CAN/electron/app/src/components/common/DataBox.js",[],"/home/pi/JaguarXf_CAN/electron/app/src/components/common/DataBoxSingleLine.js",["148","149"],"import React from 'react'\nimport {Box, Typography, LinearProgress, withStyles} from \"@material-ui/core\";\n\nconst DataBoxSingleLine = ({data}) => {\n\n    return (\n        <div>\n            {data ?\n                <div>\n                    <Typography variant=\"subtitle1\" component=\"h4\" gutterBottom align={'center'}>\n                        {data.pre}\n                    </Typography>\n                    <Box display={'flex'} flexDirection={'row'} alignContent={'center'} justifyContent={'center'}>\n                        <Box display={'flex'} flexDirection={'column'} justifyContent={'center'}>\n                            <Typography variant=\"subtitle2\" component=\"p\" gutterBottom align={'center'}>\n                                {data.val}\n                            </Typography>\n                        </Box>\n                        <Box display={'flex'} flexDirection={'column'} justifyContent={'center'}>\n                            <Typography variant=\"subtitle2\" component=\"p\" gutterBottom align={'center'}>\n                                {data.suf}\n                            </Typography>\n                        </Box>\n\n                    </Box>\n                </div>\n                : <div>\n                    loading\n                </div>\n\n            }\n\n        </div>\n    )\n}\n\nexport default DataBoxSingleLine;","/home/pi/JaguarXf_CAN/electron/app/src/components/common/NavButton.js",["150"],"import React from 'react';\r\nimport { BottomNavigationAction} from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit'\r\nimport DriveEtaIcon from '@material-ui/icons/DriveEta'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport carplay from './carplay.png'\r\n\r\nfunction NavButton ({name}) {\r\n    return(\r\n\r\n        <BottomNavigationAction\r\n            component={Link}\r\n            to={name}\r\n            icon={\r\n                name === 'carplay' ?\r\n                    <img src={carplay} width={25} height={25} /> :\r\n                name === 'climate' ?\r\n                    <AcUnitIcon /> :\r\n                name === 'vehicle' ?\r\n                    <DriveEtaIcon /> :\r\n                name === 'settings' ?\r\n                    <SettingsIcon /> :\r\n                    <AcUnitIcon />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default NavButton;","/home/pi/JaguarXf_CAN/electron/app/src/reducers/vehicleInfo.js",["151"],"import {VEHICLE_INFO_UPDATE} from \"../actions/types\";\n\nexport default (state={}, action) => {\n    switch(action.type) {\n        case VEHICLE_INFO_UPDATE:\n        default:\n            return state\n    }\n}",["152","153"],"/home/pi/JaguarXf_CAN/electron/app/src/reducers/engineDetails.js",["154"],"import {SOCKET_ENGINE, SOCKET_TRIP} from \"../actions/types\";\n\nexport default (state={trip: {coolant: 0, speed:0, revs: 0, oil: 0}}, action) => {\n    switch(action.type) {\n        case SOCKET_ENGINE:\n            return {...state, engine: action.payload};\n        case SOCKET_TRIP:\n            return {...state, trip: action.payload};\n        default:\n            return state\n    }\n}","/home/pi/JaguarXf_CAN/electron/app/src/reducers/appDetails.js",["155","156","157"],"import {CURRENT_PAGE, GENERAL, LEAVE_PAGE, ROOM_JOINED, SOCKET_CONNECTED} from \"../actions/types\";\n\nexport default (state={currentPage: 'climate', dark: false}, action) => {\n    switch(action.type) {\n        case SOCKET_CONNECTED:\n            return {...state, connected: action.payload}\n        case ROOM_JOINED:\n            return {...state, currentPage: action.payload}\n        case GENERAL:\n            return {...state, dark: action.payload.dark}\n        default:\n            return state\n    }\n}","/home/pi/JaguarXf_CAN/electron/app/src/reducers/climate.js",["158"],"import {SOCKET_CLIMATE} from \"../actions/types\";\n\nexport default (state={}, action) => {\n    switch(action.type) {\n        case SOCKET_CLIMATE:\n            return {...state, ...action.payload};\n        default:\n            return state\n    }\n}","/home/pi/JaguarXf_CAN/electron/app/src/reducers/settings.js",["159"],"import {SOCKET_SETTINGS} from \"../actions/types\";\n\n\nexport default (state={}, action) => {\n    switch(action.type) {\n        case SOCKET_SETTINGS:\n            return {...state, bools: action.payload};\n        default:\n            return state\n    }\n}","/home/pi/JaguarXf_CAN/electron/app/src/components/carplay/carplay.js",["160","161","162"],"/home/pi/JaguarXf_CAN/electron/app/src/components/carplay/carplayWindow.js",["163"],"import React, {Component} from 'react';\r\nimport JsmpegPlayer from \"./JsmpegPlayer\";\r\nimport './CarplayWindow.css';\r\n\r\nconst {ipcRenderer} = window;\r\n\r\n\r\nclass CarplayWindow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            height: 0,\r\n            width: 0,\r\n            mouseDown: false,\r\n            lastX: 0,\r\n            lastY: 0,\r\n            status: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const height = this.divElement.clientHeight\r\n        const width = this.divElement.clientWidth\r\n        this.setState({height, width}, () => {\r\n            console.log(this.state.height, this.state.width)\r\n        })\r\n\r\n        ipcRenderer.on('plugged', () => {\r\n            this.setState({status: true})\r\n        })\r\n        ipcRenderer.on('unplugged', () => {\r\n            this.setState({status: false})\r\n        })\r\n        ipcRenderer.send('statusReq')\r\n\r\n        ipcRenderer.on('quit', () => {\r\n            this.props.history.push('/climate')\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const handleMDown = (e) => {\r\n            console.log(\"touched\", e, e.target.getBoundingClientRect())\r\n            let currentTargetRect = e.target.getBoundingClientRect();\r\n            let x = e.clientX - currentTargetRect.left\r\n            let y = e.clientY - currentTargetRect.top\r\n            x = x / this.state.width\r\n            y = y / this.state.height\r\n            this.setState({lastX: x, lastY: y})\r\n            this.setState({mouseDown: true})\r\n            ipcRenderer.send('click', {type: 14, x: x, y: y})\r\n        }\r\n        const handleMUp = (e) => {\r\n            console.log(\"touched end\", e)\r\n            let currentTargetRect = e.target.getBoundingClientRect();\r\n            let x = e.clientX - currentTargetRect.left\r\n            let y = e.clientY - currentTargetRect.top\r\n            x = x / this.state.width\r\n            y = y / this.state.height\r\n            this.setState({mouseDown: false})\r\n            ipcRenderer.send('click', {type: 16, x: x, y: y})\r\n        }\r\n\r\n\r\n        const handleMMove = (e) => {\r\n            console.log(\"touched drag\", e)\r\n            let currentTargetRect = e.target.getBoundingClientRect();\r\n            let x = e.clientX - currentTargetRect.left\r\n            let y = e.clientY - currentTargetRect.top\r\n            x = x / this.state.width\r\n            y = y / this.state.height\r\n            ipcRenderer.send('click', {type: 15, x: x, y: y})\r\n        }\r\n\r\n        const handleDown = (e) => {\r\n            console.log(\"touched\", e, e.target.getBoundingClientRect())\r\n            let currentTargetRect = e.target.getBoundingClientRect();\r\n            let x = e.touches[0].clientX - currentTargetRect.left\r\n            let y = e.touches[0].clientY - currentTargetRect.top\r\n            x = x / this.state.width\r\n            y = y / this.state.height\r\n            this.setState({lastX: x, lastY: y})\r\n            this.setState({mouseDown: true})\r\n            ipcRenderer.send('click', {type: 14, x: x, y: y})\r\n        }\r\n        const handleUp = (e) => {\r\n            console.log(\"touched end\", e)\r\n            let currentTargetRect = e.target.getBoundingClientRect();\r\n            let x = this.state.lastX\r\n            let y = this.state.lastY\r\n            this.setState({mouseDown: false})\r\n            ipcRenderer.send('click', {type: 16, x: x, y: y})\r\n        }\r\n\r\n\r\n        const handleMove = (e) => {\r\n            console.log(\"touched drag\", e)\r\n            let currentTargetRect = e.target.getBoundingClientRect();\r\n            let x = e.touches[0].clientX - currentTargetRect.left\r\n            let y = e.touches[0].clientY - currentTargetRect.top\r\n            x = x / this.state.width\r\n            y = y / this.state.height\r\n            ipcRenderer.send('click', {type: 15, x: x, y: y})\r\n        }\r\n\r\n\r\n        return (\r\n            <div style={{height: '100%', flexGrow: 1}}>\r\n                <div ref={(divElement) => {\r\n                    this.divElement = divElement\r\n                }}\r\n                     onTouchStart={handleDown}\r\n                     onTouchEnd={handleUp}\r\n                     onTouchMove={(e) => {\r\n                         if (this.state.mouseDown) {\r\n                             handleMove(e)\r\n                         }\r\n                     }}\r\n                     onMouseDown={handleMDown}\r\n                     onMouseUp={handleMUp}\r\n                     onMouseMove={(e) => {\r\n                         if (this.state.mouseDown) {\r\n                             handleMMove(e)\r\n                         }\r\n                     }}\r\n                     style={{height: '100%', width: '100%', padding: 0, margin: 0, display: 'flex'}}>\r\n                    {this.state.status ?\r\n                        <JsmpegPlayer\r\n                            wrapperClassName={\"video-wrapper\"}\r\n                            videoUrl={\"ws://localhost:8082/supersecret\"}\r\n                            options={{\r\n                                autoplay: true\r\n                            }}\r\n                        ></JsmpegPlayer> : <div style={{marginTop: 'auto', marginBottom: 'auto', textAlign: 'center', flexGrow: '1'}}>CONNECT IPHONE TO BEGIN CARPLAY</div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CarplayWindow;","/home/pi/JaguarXf_CAN/electron/app/src/components/carplay/JsmpegPlayer.js",[],{"ruleId":"164","severity":1,"message":"165","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":24},{"ruleId":"164","severity":1,"message":"168","line":9,"column":10,"nodeType":"166","messageId":"167","endLine":9,"endColumn":29},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"164","severity":1,"message":"173","line":2,"column":36,"nodeType":"166","messageId":"167","endLine":2,"endColumn":40},{"ruleId":"164","severity":1,"message":"174","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":21},{"ruleId":"164","severity":1,"message":"175","line":1,"column":9,"nodeType":"166","messageId":"167","endLine":1,"endColumn":23},{"ruleId":"164","severity":1,"message":"176","line":20,"column":11,"nodeType":"166","messageId":"167","endLine":20,"endColumn":20},{"ruleId":"177","severity":1,"message":"178","line":4,"column":5,"nodeType":"166","endLine":4,"endColumn":12,"suggestions":"179"},{"ruleId":"164","severity":1,"message":"180","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":24},{"ruleId":"164","severity":1,"message":"181","line":3,"column":46,"nodeType":"166","messageId":"167","endLine":3,"endColumn":49},{"ruleId":"164","severity":1,"message":"180","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":24},{"ruleId":"164","severity":1,"message":"182","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":13},{"ruleId":"164","severity":1,"message":"180","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":24},{"ruleId":"164","severity":1,"message":"183","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":21},{"ruleId":"164","severity":1,"message":"173","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"184","line":4,"column":27,"nodeType":"166","messageId":"167","endLine":4,"endColumn":49},{"ruleId":"164","severity":1,"message":"185","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"186","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":19},{"ruleId":"164","severity":1,"message":"187","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":19},{"ruleId":"164","severity":1,"message":"188","line":14,"column":8,"nodeType":"166","messageId":"167","endLine":14,"endColumn":27},{"ruleId":"164","severity":1,"message":"189","line":42,"column":11,"nodeType":"166","messageId":"167","endLine":42,"endColumn":22},{"ruleId":"164","severity":1,"message":"190","line":2,"column":26,"nodeType":"166","messageId":"167","endLine":2,"endColumn":40},{"ruleId":"164","severity":1,"message":"191","line":2,"column":42,"nodeType":"166","messageId":"167","endLine":2,"endColumn":52},{"ruleId":"192","severity":1,"message":"193","line":17,"column":21,"nodeType":"194","endLine":17,"endColumn":65},{"ruleId":"195","severity":1,"message":"196","line":3,"column":1,"nodeType":"197","endLine":9,"endColumn":2},{"ruleId":"169","replacedBy":"198"},{"ruleId":"171","replacedBy":"199"},{"ruleId":"195","severity":1,"message":"196","line":3,"column":1,"nodeType":"197","endLine":12,"endColumn":2},{"ruleId":"164","severity":1,"message":"200","line":1,"column":9,"nodeType":"166","messageId":"167","endLine":1,"endColumn":21},{"ruleId":"164","severity":1,"message":"201","line":1,"column":32,"nodeType":"166","messageId":"167","endLine":1,"endColumn":42},{"ruleId":"195","severity":1,"message":"196","line":3,"column":1,"nodeType":"197","endLine":14,"endColumn":2},{"ruleId":"195","severity":1,"message":"196","line":3,"column":1,"nodeType":"197","endLine":10,"endColumn":2},{"ruleId":"195","severity":1,"message":"196","line":4,"column":1,"nodeType":"197","endLine":11,"endColumn":2},{"ruleId":"164","severity":1,"message":"180","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":24},{"ruleId":"164","severity":1,"message":"202","line":3,"column":23,"nodeType":"166","messageId":"167","endLine":3,"endColumn":34},{"ruleId":"164","severity":1,"message":"203","line":24,"column":11,"nodeType":"166","messageId":"167","endLine":24,"endColumn":19},{"ruleId":"164","severity":1,"message":"204","line":91,"column":17,"nodeType":"166","messageId":"167","endLine":91,"endColumn":34},"no-unused-vars","'socketMiddleware' is defined but never used.","Identifier","unusedVar","'composeWithDevTools' is defined but never used.","no-native-reassign",["205"],"no-negated-in-lhs",["206"],"'Link' is defined but never used.","'useMediaQuery' is defined but never used.","'socketConnectT' is defined but never used.","'onMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'func'. Either include it or remove the dependency array.",["207"],"'useState' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","'useDispatch' is defined but never used.","'BottomNavigationAction' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'KeyboardArrowUpIcon' is defined but never used.","'handleClick' is assigned a value but never used.","'LinearProgress' is defined but never used.","'withStyles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["205"],["206"],"'CURRENT_PAGE' is defined but never used.","'LEAVE_PAGE' is defined but never used.","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.","'currentTargetRect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [func]",{"range":"210","text":"211"},[101,103],"[func]"]